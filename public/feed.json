{
  "version": "https://jsonfeed.org/version/1",
  "title": "Guivin",
  "home_page_url": "http://localhost:1313/",
  "feed_url": "http://localhost:1313/feed.json",
  "description": "Personal Blog of a Site Reliabity Engineer",
  "favicon": "http://localhost:1313//assets/favicon.ico",
  "expired": false,
  "author": {
    "name": "Calvin Tran",
    "url": "http://localhost:1313/"
  },
  "items": [
    
    

    
    {
      "id": "6e9b685ce56200fa7b8972a676e579bf6976f6b4",
      "title": "How to Fix Missing Terraform Darwin ARM64 Binary Issues",
      "summary": "",
      "content_text": "Sometimes you need to work with an older version of Terraform but there is no existing Darwin ARM64 binary for the version you need. Even if you’re using version managers like tfenv or asdf, you might find that the correct binary architecture is missing for the version you\u0026rsquo;re looking for. This is common for versions created before Mac processor architecture was released.\nHere a quick workaround solution to fix this situation :\nInstall go : brew install go Clone the Terraform repository : git clone https://github.com/hashicorp/terraform Checkout the required version of Terraform : cd terraform git checkout tags/v0.12.13 Build an executable file : go install . The previous go command build a binary in your GOBIN by default. Ensure it is present in your PATH : export PATH=\u0026#34;$PATH:$(go env GOBIN)\u0026#34; ",
      "content_html": "\u003cp\u003eSometimes you need to work with an older version of Terraform but there is no existing Darwin ARM64 binary for the version you need. Even if you’re using version managers like \u003ca href=\"https://github.com/tfutils/tfenv\"\u003etfenv\u003c/a\u003e or \u003ca href=\"https://asdf-vm.com/\"\u003easdf\u003c/a\u003e, you might find that the correct binary architecture is missing for the version you\u0026rsquo;re looking for. This is common for versions created before Mac processor architecture was released.\u003c/p\u003e\n\u003cp\u003eHere a quick workaround solution to fix this situation :\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eInstall go :\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ebrew install go\n\u003c/code\u003e\u003c/pre\u003e\u003col start=\"2\"\u003e\n\u003cli\u003eClone the Terraform repository :\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egit clone https://github.com/hashicorp/terraform\n\u003c/code\u003e\u003c/pre\u003e\u003col start=\"3\"\u003e\n\u003cli\u003eCheckout the required version of Terraform :\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ecd terraform\ngit checkout tags/v0.12.13\n\u003c/code\u003e\u003c/pre\u003e\u003col start=\"4\"\u003e\n\u003cli\u003eBuild an executable file :\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ego install .\n\u003c/code\u003e\u003c/pre\u003e\u003col start=\"5\"\u003e\n\u003cli\u003eThe previous \u003ccode\u003ego\u003c/code\u003e command build a binary in your \u003ccode\u003eGOBIN\u003c/code\u003e by default. Ensure it is present in your \u003ccode\u003ePATH\u003c/code\u003e :\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eexport PATH=\u0026#34;$PATH:$(go env GOBIN)\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e",
      "url": "http://localhost:1313/posts/terraform-arm64-macos-workaround/",
      "date_published": "31036-31-09T344:3131:00+02:00",
      "date_modified": "31036-31-09T344:3131:00+02:00",
      "author": {
        "name": "Calvin Tran",
        "url": "http://localhost:1313/"
      }
    }
    
  ]
}